<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App</title>
    <link rel="stylesheet" href="style.css">
    <script src="https://kit.fontawesome.com/a692e1c39f.js" crossorigin="anonymous"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins&display=swap');

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        .container {
            background: #171717;
            color: #fff;
            padding: 2rem;
            width: 40%;
            margin: 4rem auto;
            border-radius: 10px;
        }

        .weather__header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        input {
            border: none;
            background: #1e1e1e;
            outline: none;
            color: #fff;
            padding: 0.5rem 2.5rem;
            border-radius: 5px;
        }
input::placeholder {
            color: #fff;
        }

        .weather__units {
            font-size: 1.5rem;
            cursor: pointer;
        }

        .weather__body {
            text-align: center;
            margin-top: 3rem;
        }

        .weather__datetime {
            margin-bottom: 2rem;
            font-size: 14px;
        }

        .weather__icon img {
            width: 100px;
        }

        .weather__minmax {
            display: flex;
            justify-content: center;
        }

        .weather__info {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            grid-gap: 1rem;
            margin-top: 3rem;
        }

        @media(max-width: 936px) {
            .container {
                width: 90%;
            }

            .weather__header {
                flex-direction: column;
            }
        }
input::placeholder {
            color: #fff;
        }

        .weather__units {
            font-size: 1.5rem;
            cursor: pointer;
        }

        .weather__body {
            text-align: center;
            margin-top: 3rem;
        }

        .weather__datetime {
            margin-bottom: 2rem;
            font-size: 14px;
        }

        .weather__icon img {
            width: 100px;
        }

        .weather__minmax {
            display: flex;
            justify-content: center;
        }

        .weather__info {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            grid-gap: 1rem;
            margin-top: 3rem;
        }

        @media(max-width: 936px) {
            .container {
                width: 90%;
            }

            .weather__header {
                flex-direction: column;
            }
        }
class="weather__card"><i class="fa-solid fa-gauge-high"></i>
                <p>Pressure: <span class="weather__pressure">18&#176</span></p>
            </div>
        </div>
    </div>
    <script>
        const API_KEY = '64f60853740a1ee3ba20d0fb595c97d5';
let units = "metric";


document.querySelector(".weather__search").addEventListener('submit', event => {
    event.preventDefault();
    getWeather();
});

function getWeather() {
    const city = document.querySelector(".weather__searchform").value || "Mumbai";
fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=${units}`)
        .then(response => response.json())
        .then(data => {
            document.querySelector(".weather__city").textContent = `${data.name}, ${data.sys.country}`;
            document.querySelector(".weather__datetime").textContent = new Date(data.dt * 1000).toLocaleString();
            document.querySelector(".weather__forecast").textContent = data.weather[0].main;
            document.querySelector(".weather__temperature").innerHTML = `${data.main.temp.toFixed()}&#176`;
            document.querySelector(".weather__minmax").innerHTML = `Min: ${data.main.temp_min.toFixed()}&#176 / Max: ${data.main.temp_max.toFixed()}&#176`;
            document.querySelector('.weather__realfeel').textContent = `${data.main.feels_like.toFixed()}Â°`;
            document.querySelector('.weather__humidity').textContent = `${data.main.humidity}%`;
            document.querySelector('.weather__wind').textContent = `${data.wind.speed} ${units === "imperial" ? "mph" : "m/s"}`;
            document.querySelector('.weather__pressure').textContent = `${data.main.pressure} hPa`;
        })
        .catch(error => console.error("Error fetching weather data:", error));
}

window.onload = getWeather;
    </script>
</body>

</html>

